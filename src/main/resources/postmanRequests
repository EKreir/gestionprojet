| M√©thode HTTP | Endpoint          | Description                                                    | Corps attendu (Body JSON)                                                                            | R√©ponse (code + contenu)                                     |
| ------------ | ----------------- | -------------------------------------------------------------- | ---------------------------------------------------------------------------------------------------- | ------------------------------------------------------------ |
| **GET**      | `/api/users`      | R√©cup√©rer la liste de tous les utilisateurs                    | ‚Äî                                                                                                    | `200 OK` ‚Üí tableau de `UserDTO`                              |
| **GET**      | `/api/users/{id}` | R√©cup√©rer un utilisateur par son ID                            | ‚Äî                                                                                                    | `200 OK` ‚Üí `UserDTO` / `404 Not Found` si inexistant         |
| **POST**     | `/api/users`      | Cr√©er un nouvel utilisateur (avec mot de passe)                | `json { "username": "alice", "email": "alice@example.com", "roles": ["USER"], "password": "1234" } ` | `201 Created` ‚Üí `UserDTO` du nouvel utilisateur              |
| **PUT**      | `/api/users/{id}` | Modifier un utilisateur existant (ex. changer le mail ou r√¥le) | `json { "email": "alice.new@example.com", "roles": ["ADMIN"] } `                                     | `200 OK` ‚Üí `UserDTO` mis √† jour / `404` si ID invalide       |
| **DELETE**   | `/api/users/{id}` | Supprimer un utilisateur existant                              | ‚Äî                                                                                                    | `204 No Content` ‚Üí suppression r√©ussie / `404` si non trouv√© |

Partie projects :

| üß© **Action**                           | üîó **M√©thode** | üåç **URL (exemple)**                             | üß† **Description**                                            | üß∞ **Body JSON (exemple)**                                                                                                                                | üí¨ **Code retour attendu** |
| --------------------------------------- | -------------- | ------------------------------------------------ | ------------------------------------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- | -------------------------- |
| ‚ûï **Cr√©er un projet**                   | `POST`         | `http://localhost:8080/api/projects`             | Cr√©e un nouveau projet avec ses infos de base                 | `json { "name": "Refonte site web", "description": "Mise √† jour du site corporate", "startDate": "2025-10-01", "endDate": "2025-12-15" } `                | `201 CREATED`              |
| üìú **Lister tous les projets**          | `GET`          | `http://localhost:8080/api/projects`             | Retourne la liste compl√®te des projets enregistr√©s            | *(aucun)*                                                                                                                                                 | `200 OK`                   |
| üîç **Obtenir un projet par ID**         | `GET`          | `http://localhost:8080/api/projects/1`           | R√©cup√®re les d√©tails d‚Äôun projet sp√©cifique (par son id)      | *(aucun)*                                                                                                                                                 | `200 OK`                   |
| ‚úèÔ∏è **Mettre √† jour un projet existant** | `PUT`          | `http://localhost:8080/api/projects/1`           | Met √† jour les infos principales d‚Äôun projet                  | `json { "name": "Refonte site e-commerce", "description": "Nouvelle version avec panier optimis√©", "startDate": "2025-10-01", "endDate": "2026-01-31" } ` | `200 OK`                   |
| ‚ùå **Supprimer un projet**               | `DELETE`       | `http://localhost:8080/api/projects/1`           | Supprime le projet dont l‚ÄôID est pass√© dans l‚ÄôURL             | *(aucun)*                                                                                                                                                 | `204 NO CONTENT`           |
| üë• **Ajouter un membre au projet**      | `POST`         | `http://localhost:8080/api/projects/1/members/3` | Ajoute l‚Äôutilisateur d‚ÄôID `3` au projet `1`                   | *(aucun)*                                                                                                                                                 | `200 OK`                   |
| üö´ **Retirer un membre d‚Äôun projet**    | `DELETE`       | `http://localhost:8080/api/projects/1/members/3` | Retire l‚Äôutilisateur d‚ÄôID `3` du projet `1`                   | *(aucun)*                                                                                                                                                 | `204 NO CONTENT`           |
| üìÇ **Lister les membres d‚Äôun projet**   | `GET`          | `http://localhost:8080/api/projects/1/members`   | Retourne la liste des utilisateurs associ√©s √† un projet donn√© | *(aucun)*                                                                                                                                                 | `200 OK`                   |
